name: üõ†Ô∏è Liste olu≈üturucu

on:
  schedule:
    - cron: '0 */4 * * *'  # Her 4 saatte bir √ßalƒ±≈üƒ±r
  workflow_dispatch:  # Elle tetikleme i√ßin

jobs:
  update-m3u:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.LATTE_PAT }}

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests

      - name: Update M3U files
        env:
          DADDYLIVE_URL: ${{ secrets.DADDYLIVE_URL }}
          DADDYLIVE_EVENTS_URL: ${{ secrets.DADDYLIVE_EVENTS_URL }}
          LATTE_PAT: ${{ secrets.LATTE_PAT }}
        run: |
          python - <<EOF
          import requests
          import re
          import os
          import hashlib
          daddy_url = os.environ.get('DADDYLIVE_URL')
          events_url = os.environ.get('DADDYLIVE_EVENTS_URL')
          pat = os.environ.get('LATTE_PAT')
          print(daddy_url, events_url, pat)

          def fetch_m3u_content(url):
              try:
                  headers = {}
                  if url.startswith('https://api.github.com'):
                      token = os.environ.get('LATTE_PAT')
                      if token:
                          headers['Authorization'] = f'token {token}'
                  response = requests.get(url, headers=headers)
                  response.raise_for_status()
                  return response.text
              except Exception as e:
                  print(f"Error fetching {url}: {e}")
                  return None

          def write_file(file_path, content):
              os.makedirs(os.path.dirname(file_path), exist_ok=True)
              with open(file_path, 'w', encoding='utf-8') as f:
                  f.write(content)
              print(f"File updated: {file_path}")

          def process_myway_content(content):
              lines = content.split('\n')
              filtered_lines = ['#EXTM3U']
              buffer_lines = []
              logo_url = 'https://raw.githubusercontent.com/GitLatte/temporarylists/refs/heads/main/img/mywaytv.png'
              url_count = 0
              current_channel = None

              for line in lines:
                  line = line.strip()
                  if not line or line.startswith('#####'):
                      continue

                  if line.startswith('#EXTINF'):
                      url_count = 0
                      current_channel = line

                      if buffer_lines and not any(l.startswith('http') for l in buffer_lines):
                          buffer_lines = []
                      elif buffer_lines:
                          filtered_lines.extend(buffer_lines)
                          buffer_lines = []

                      if 'tvg-' not in line:
                          line = line.replace('#EXTINF:-1', f'#EXTINF:-1 tvg-logo="{logo_url}" tvg-language="T√ºrk√ße" tvg-country="TR"')
                      else:
                          if 'tvg-logo=' in line:
                              line = re.sub('tvg-logo="[^"]*"', f'tvg-logo="{logo_url}"', line)
                          else:
                              line = line.replace('#EXTINF:-1', f'#EXTINF:-1 tvg-logo="{logo_url}"')
                          if 'tvg-language=' not in line:
                              line = line.replace('#EXTINF:-1', '#EXTINF:-1 tvg-language="T√ºrk√ße"')
                          if 'tvg-country=' not in line:
                              line = line.replace('#EXTINF:-1', '#EXTINF:-1 tvg-country="TR"')
                      buffer_lines = [line]

                  elif line.startswith('#EXTVLCOPT') and buffer_lines:
                      buffer_lines.append(line)
                  elif line.startswith('http') and buffer_lines:
                      url_count += 1
                      if url_count == 1:
                          buffer_lines.append(line)
                      else:
                          buffer_lines.append(f'# ? {line}')
                      filtered_lines.extend(buffer_lines)
                      buffer_lines = []

              if buffer_lines and any(l.startswith('http') for l in buffer_lines):
                  filtered_lines.extend(buffer_lines)

              return '\n'.join(filtered_lines)

          DADDYLIVE_URL = os.environ.get('DADDYLIVE_URL')
          DADDYLIVE_EVENTS_URL = os.environ.get('DADDYLIVE_EVENTS_URL')

          daddylive_content = fetch_m3u_content(DADDYLIVE_URL)
          if daddylive_content:
              lines = daddylive_content.split('\n')
              filtered_lines = ['#EXTM3U']
              turkey_lines = []
              bein_lines = []
              other_lines = {}
              current_group = None
              include_next = False
              buffer_lines = []

              country_translations = {
                  'UNITED STATES': 'Amerika Birle≈üik Devletleri',
                  'UNITED KINGDOM': 'Birle≈üik Krallƒ±k',
                  'GERMANY': 'Almanya',
                  'FRANCE': 'Fransa',
                  'ITALY': 'ƒ∞talya',
                  'SPAIN': 'ƒ∞spanya',
                  'NETHERLANDS': 'Hollanda',
                  'PORTUGAL': 'Portekiz',
                  'BELGIUM': 'Bel√ßika',
                  'DENMARK': 'Danimarka',
                  'NORWAY': 'Norve√ß',
                  'SWEDEN': 'ƒ∞sve√ß',
                  'FINLAND': 'Finlandiya',
                  'AUSTRIA': 'Avusturya',
                  'SWITZERLAND': 'ƒ∞svi√ßre',
                  'GREECE': 'Yunanistan',
                  'POLAND': 'Polonya',
                  'CZECH REPUBLIC': '√áek Cumhuriyeti',
                  'HUNGARY': 'Macaristan',
                  'ROMANIA': 'Romanya',
                  'BULGARIA': 'Bulgaristan',
                  'CROATIA': 'Hƒ±rvatistan',
                  'SERBIA': 'Sƒ±rbistan',
                  'SLOVENIA': 'Slovenya',
                  'SLOVAKIA': 'Slovakya',
                  'BOSNIA AND HERZEGOVINA': 'Bosna Hersek',
                  'ALBANIA': 'Arnavutluk',
                  'MACEDONIA': 'Makedonya',
                  'MONTENEGRO': 'Karadaƒü',
                  'RUSSIA': 'Rusya',
                  'UKRAINE': 'Ukrayna',
                  'BELARUS': 'Belarus',
                  'ESTONIA': 'Estonya',
                  'LATVIA': 'Letonya',
                  'LITHUANIA': 'Litvanya',
                  'TURKEY': 'T√ºrkiye',
                  'QATAR': 'Katar',
                  'UNITED ARAB EMIRATES': 'Birle≈üik Arap Emirlikleri',
                  'SAUDI ARABIA': 'Suudi Arabistan',
                  'IRAN': 'ƒ∞ran',
                  'ISRAEL': 'ƒ∞srail',
                  'EGYPT': 'Mƒ±sƒ±r',
                  'MOROCCO': 'Fas',
                  'TUNISIA': 'Tunus',
                  'ALGERIA': 'Cezayir',
                  'AFRICA': 'Afrika',
                  'SOUTH AFRICA': 'G√ºney Afrika',
                  'NIGERIA': 'Nijerya',
                  'KENYA': 'Kenya',
                  'INDIA': 'Hindistan',
                  'PAKISTAN': 'Pakistan',
                  'BANGLADESH': 'Banglade≈ü',
                  'SRI LANKA': 'Sri Lanka',
                  'NEPAL': 'Nepal',
                  'CHINA': '√áin',
                  'JAPAN': 'Japonya',
                  'SOUTH KOREA': 'G√ºney Kore',
                  'THAILAND': 'Tayland',
                  'VIETNAM': 'Vietnam',
                  'INDONESIA': 'Endonezya',
                  'MALAYSIA': 'Malezya',
                  'PHILIPPINES': 'Filipinler',
                  'SINGAPORE': 'Singapur',
                  'AUSTRALIA': 'Avustralya',
                  'NEW ZEALAND': 'Yeni Zelanda',
                  'BRAZIL': 'Brezilya',
                  'ARGENTINA': 'Arjantin',
                  'CHILE': '≈ûili',
                  'COLUMBIA': 'Kolombiya',
                  'PERU': 'Peru',
                  'VENEZUELA': 'Venezuela',
                  'MEXICO': 'Meksika',
                  'OTHERS': 'Diƒüer Spor',
                  'CANADA': 'Kanada',
                  'CYPRUS': 'Kƒ±brƒ±s',
                  'ICELAND': 'ƒ∞zlanda',
                  'IRELAND': 'ƒ∞rlanda'
              }

              language_map = {
                  'UNITED STATES': 'ƒ∞ngilizce',
                  'UNITED KINGDOM': 'ƒ∞ngilizce',
                  'GERMANY': 'Almanca',
                  'FRANCE': 'Fransƒ±zca',
                  'ITALY': 'ƒ∞talyanca',
                  'SPAIN': 'ƒ∞spanyolca',
                  'NETHERLANDS': 'Hollandaca',
                  'PORTUGAL': 'Portekizce',
                  'BELGIUM': 'Hollandaca',
                  'DENMARK': 'Danca',
                  'NORWAY': 'Norve√ß√ße',
                  'SWEDEN': 'ƒ∞sve√ß√ße',
                  'FINLAND': 'Fince',
                  'AUSTRIA': 'Almanca',
                  'SWITZERLAND': 'Almanca',
                  'GREECE': 'Yunanca',
                  'POLAND': 'Leh√ße',
                  'CZECH REPUBLIC': '√áek√ße',
                  'HUNGARY': 'Macarca',
                  'ROMANIA': 'Romence',
                  'BULGARIA': 'Bulgarca',
                  'CROATIA': 'Hƒ±rvat√ßa',
                  'SERBIA': 'Sƒ±rp√ßa',
                  'SLOVENIA': 'Slovence',
                  'SLOVAKIA': 'Slovak√ßa',
                  'BOSNIA AND HERZEGOVINA': 'Bo≈ünak√ßa',
                  'ALBANIA': 'Arnavut√ßa',
                  'MACEDONIA': 'Makedonca',
                  'MONTENEGRO': 'Karadaƒüca',
                  'RUSSIA': 'Rus√ßa',
                  'UKRAINE': 'Ukraynaca',
                  'BELARUS': 'Belarus√ßa',
                  'ESTONIA': 'Estonca',
                  'LATVIA': 'Letonca',
                  'LITHUANIA': 'Litvanca',
                  'TURKEY': 'T√ºrk√ße',
                  'QATAR': 'Arap√ßa',
                  'UNITED ARAB EMIRATES': 'Arap√ßa',
                  'SAUDI ARABIA': 'Arap√ßa',
                  'IRAN': 'Fars√ßa',
                  'ISRAEL': 'ƒ∞branice',
                  'EGYPT': 'Arap√ßa',
                  'MOROCCO': 'Arap√ßa',
                  'TUNISIA': 'Arap√ßa',
                  'ALGERIA': 'Arap√ßa',
                  'AFRICA': 'ƒ∞ngilizce',
                  'SOUTH AFRICA': 'ƒ∞ngilizce',
                  'NIGERIA': 'ƒ∞ngilizce',
                  'KENYA': 'ƒ∞ngilizce',
                  'INDIA': 'Hint√ße',
                  'PAKISTAN': 'Urduca',
                  'BANGLADESH': 'Bengalce',
                  'SRI LANKA': 'Seylanca',
                  'NEPAL': 'Nepalce',
                  'CHINA': '√áince',
                  'JAPAN': 'Japonca',
                  'SOUTH KOREA': 'Korece',
                  'THAILAND': 'Tayca',
                  'VIETNAM': 'Vietnamca',
                  'INDONESIA': 'Endonezce',
                  'MALAYSIA': 'Malayca',
                  'PHILIPPINES': 'Filipince',
                  'SINGAPORE': 'ƒ∞ngilizce',
                  'AUSTRALIA': 'ƒ∞ngilizce',
                  'NEW ZEALAND': 'ƒ∞ngilizce',
                  'BRAZIL': 'Portekizce',
                  'ARGENTINA': 'ƒ∞spanyolca',
                  'CHILE': 'ƒ∞spanyolca',
                  'COLUMBIA': 'ƒ∞spanyolca',
                  'PERU': 'ƒ∞spanyolca',
                  'VENEZUELA': 'ƒ∞spanyolca',
                  'MEXICO': 'ƒ∞spanyolca',
                  'OTHERS': 'ƒ∞ngilizce',
                  'CANADA': 'ƒ∞ngilizce',
                  'CYPRUS': 'Yunanca',
                  'ICELAND': 'ƒ∞zlandaca',
                  'IRELAND': 'ƒ∞ngilizce'
              }

              buffer_lines = []
              def add_buffered_lines(target_list):
                  if buffer_lines:
                      target_list.extend(buffer_lines)
                      buffer_lines.clear()

              for line in lines:
                  if line.startswith('#EXTINF'):
                      if buffer_lines:
                          if len(turkey_lines) > 0 and turkey_lines[-1].startswith('#EXTINF'):
                              add_buffered_lines(turkey_lines)
                          elif len(bein_lines) > 0 and bein_lines[-1].startswith('#EXTINF'):
                              add_buffered_lines(bein_lines)
                          else:
                              for country_list in other_lines.values():
                                  if len(country_list) > 0 and country_list[-1].startswith('#EXTINF'):
                                      add_buffered_lines(country_list)
                                      break
                          buffer_lines = []

                      include_next = False
                      current_group = re.search('group-title="([^"]+)"', line)
                      channel_name = re.search(',[[:space:]]*([^,\n]+)$', line)

                      if current_group:
                          group = current_group.group(1)
                          original_country = group
                          translated_country = country_translations.get(group, group)
                          language = language_map.get(group, '')

                          if 'tvg-country=' not in line:
                              line = line.replace('#EXTINF:-1', f'#EXTINF:-1 tvg-country="{translated_country}"')
                          elif 'tvg-country=' in line:
                              line = re.sub('tvg-country="[^"]*"', f'tvg-country="{translated_country}"', line)
                          if 'tvg-language=' not in line and language:
                              line = line.replace('#EXTINF:-1', f'#EXTINF:-1 tvg-language="{language}"')

                          line = re.sub('group-title="[^"]*"', f'group-title="{translated_country} Kanallarƒ±"', line)

                          if group == 'TURKEY':
                              include_next = True
                              turkey_lines.append(line)
                          elif 'bein' in line.lower():
                              include_next = True
                              bein_lines.append(line)
                          else:
                              include_next = True
                              if translated_country not in other_lines:
                                  other_lines[translated_country] = []
                              other_lines[translated_country].append(line)

                  elif (line.startswith('#EXTVLCOPT') or line.startswith('http')) and include_next:
                      buffer_lines.append(line)
                      if line.startswith('http'):
                          include_next = False

              if buffer_lines:
                  if len(turkey_lines) > 0 and turkey_lines[-1].startswith('#EXTINF'):
                      add_buffered_lines(turkey_lines)
                  elif len(bein_lines) > 0 and bein_lines[-1].startswith('#EXTINF'):
                      add_buffered_lines(bein_lines)
                  else:
                      for country_list in other_lines.values():
                          if len(country_list) > 0 and country_list[-1].startswith('#EXTINF'):
                              add_buffered_lines(country_list)
                              break

              filtered_lines.extend(turkey_lines)
              filtered_lines.extend(bein_lines)
              for country_name in sorted(other_lines.keys()):
                  filtered_lines.extend(other_lines[country_name])

              write_file('dl/dl-daddyliveall.m3u', '\n'.join(filtered_lines))

          myway_content = fetch_m3u_content('https://surl.be/myway06')
          if myway_content:
              filtered_myway = process_myway_content(myway_content)
              write_file('forum/myway.m3u', filtered_myway)

          daddylive_events_content = fetch_m3u_content(DADDYLIVE_EVENTS_URL)
          if daddylive_events_content:
              write_file('dl/daddyliveevents.m3u', daddylive_events_content)
          EOF

      - name: Commit and push if changed
        run: |
          git config --local user.email "actionhelper@users.noreply.github.com"
          git config --local user.name "ActionHelper"
          git add dl/dl-daddyliveall.m3u dl/daddyliveevents.m3u forum/myway.m3u
          git diff --quiet && git diff --staged --quiet || (
            git commit -m "‚ôªÔ∏è Listeler g√ºncellendi" -a
            git push
          )
